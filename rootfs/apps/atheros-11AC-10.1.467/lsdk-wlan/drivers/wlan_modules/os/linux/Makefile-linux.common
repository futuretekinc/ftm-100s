#
# Copyright (c) 2013 Qualcomm Atheros, Inc.
# All Rights Reserved.
# Qualcomm Atheros Confidential and Proprietary.
#


# default to Linux
ifeq ($(OS),)
OS := linux
endif

include $(obj)/$(DEPTH)/lmac/Makefile.inc

#
# TARGET defines the target platform ISA per GNU rules.
# It must match one of the target platforms supported by
# the HAL.  To set the set of target platforms look at
# hal/linux/*.inc.  You can set this in the environment
# to override the default setting.
#
ifeq ($(TARGET),)
TARGET := i386-elf
endif

# BUS defines the bus type to which the wireless devices is attached.
# Currently, the valid BUS types are PCI and AHB.  If BUS is not
# defined, then, we assume the bus type is PCI

ifndef BUS
BUS := PCI
endif

ifeq ($(strip ${DIRECT_ATTACH}),1)
COPTS += -DDIRECT_ATTACH
endif

ifdef HOST_OFFLOAD
COPTS += -DHOST_OFFLOAD
endif


ifeq ($(strip ${BUS}),AHB)
COPTS += -DATH_AHB
BUSNAME=ahb
endif



ifeq ($(strip ${BUS}),PCI)
COPTS += -DATH_PCI
BUSNAME=pci
endif

ifeq ($(strip ${BUS}),USB)
COPTS += -DATH_USB
BUSNAME=usb
endif

ifeq ($(strip ${BUS}),SDIO)
COPTS += -DATH_SDIO
BUSNAME=sdio
endif

ifeq ($(strip ${BUS}),dual)
COPTS += -DATH_AHB
COPTS += -DATH_PCI
BUSNAME=dual
ifneq  ($(strip ${AH_CAL_IN_DRAM_FROM_HOST}),1)
ifneq ($(strip ${AH_CAL_IN_FLASH_PCI}),1)
ifneq ($(strip ${AH_CAL_IN_FLASH_AHB}),1)
ifneq ($(strip ${AH_CAL_IN_OTP}),1)
$(error "AH_CAL_IN_DRAM_FROM_HOST/AH_CAL_IN_FLASH_PCI/AH_CAL_IN_FLASH_AHB should be defined")
endif
endif
endif
endif
ifeq  ($(strip ${AH_CAL_IN_FLASH_PCI}),1)
COPTS += -DAH_CAL_IN_FLASH_PCI -DAH_CAL_LOCATIONS_PCI=${AH_CAL_LOCATIONS_PCI} -DAH_CAL_RADIOS_PCI=${AH_CAL_RADIOS_PCI}
ifeq ($(strip ${ATH_CAL_NAND_FLASH}), 1)
COPTS += -DATH_CAL_NAND_FLASH -DATH_CAL_NAND_PARTITION=\"$(strip ${ATH_CAL_NAND_PARTITION})\"
endif
endif
ifeq  ($(strip ${AH_CAL_IN_FLASH_AHB}),1)
COPTS += -DAH_CAL_IN_FLASH_AHB -DAH_CAL_LOCATIONS_AHB=${AH_CAL_LOCATIONS_AHB} -DAH_CAL_RADIOS_AHB=${AH_CAL_RADIOS_AHB}
endif
ifeq  ($(strip ${AH_CAL_IN_DRAM_FROM_HOST}),1)
COPTS += -DAH_CAL_IN_DRAM_FROM_HOST
ifeq ($(strip ${AH_CAL_RADIOS_AHB}),1)
COPTS += -DAH_CAL_IN_DRAM_AHB -DAH_CAL_RADIOS_AHB=${AH_CAL_RADIOS_AHB} -DAH_CAL_LOCATIONS_DRAM_AHB=${AH_CAL_LOCATIONS_DRAM_AHB}
endif
ifeq ($(strip ${AH_CAL_RADIOS_PCI}),1)
COPTS += -DAH_CAL_IN_DRAM_PCI -DAH_CAL_RADIOS_PCI=${AH_CAL_RADIOS_PCI} -DAH_CAL_LOCATIONS_DRAM_PCI=${AH_CAL_LOCATIONS_DRAM_PCI}
endif
endif
ifeq  ($(strip ${AH_CAL_IN_FLASH}),1)
$(error "AH_CAL_IN_FLASH should not be defined. Define either AH_CAL_IN_DRAM_FROM_HOST/AH_CAL_IN_FLASH_PCI/AH_CAL_IN_FLASH_AHB")
endif
else
ifeq ($(strip ${AH_CAL_IN_FLASH}),1)
COPTS += -DAH_CAL_IN_FLASH_${BUS} -DAH_CAL_LOCATIONS_${BUS}=${AH_CAL_LOCATIONS} -DAH_CAL_RADIOS_${BUS}=${AH_CAL_RADIOS}
else
ifeq  ($(strip ${AH_CAL_IN_FLASH_PCI}),1)
COPTS += -DAH_CAL_IN_FLASH_PCI -DAH_CAL_LOCATIONS_PCI=${AH_CAL_LOCATIONS_PCI} -DAH_CAL_RADIOS_PCI=${AH_CAL_RADIOS_PCI}
endif
ifeq  ($(strip ${AH_CAL_IN_FLASH_AHB}),1)
COPTS += -DAH_CAL_IN_FLASH_AHB -DAH_CAL_LOCATIONS_AHB=${AH_CAL_LOCATIONS_AHB} -DAH_CAL_RADIOS_AHB=${AH_CAL_RADIOS_AHB}
endif
endif
ifeq ($(strip ${ATH_CAL_NAND_FLASH}), 1)
COPTS += -DATH_CAL_NAND_FLASH -DATH_CAL_NAND_PARTITION=\"$(strip ${ATH_CAL_NAND_PARTITION})\"
endif
ifeq  ($(strip ${AH_CAL_IN_DRAM_FROM_HOST}),1)
COPTS += -DAH_CAL_IN_DRAM_${BUS} -DAH_CAL_LOCATIONS_DRAM_$(BUS)=${AH_CAL_LOCATIONS} -DAH_CAL_RADIOS_${BUS}=${AH_CAL_RADIOS}
endif
endif

ifeq ($(TARGET),ANDROID)
COPTS += -DANDROID
endif

#
# Disable the !#@$!@# packet log
#

#COPTS += -DREMOVE_PKT_LOG

# Include path
ifneq ($(strip ${UMAC_SUPPORT_APONLY}),0)
INCS = -include $(COMINC)/compat.h -I$(COMINC) -I$(COMINC)/sys -I$(WLAN_TOP)/os/$(OS)/include -I$(WLAN_TOP)/os/$(OS)/src -I$(KERNELPATH)/include -I$(WLAN_TOP)/lmac/ath_pktlog/ -I$(WLAN_TOP)/lmac/ratectrl/
else
INCS = -include $(COMINC)/compat.h -I$(COMINC) -I$(COMINC)/sys -I$(WLAN_TOP)/os/$(OS)/include -I$(WLAN_TOP)/os/$(OS)/src -I$(KERNELPATH)/include
endif

INCS += -I$(KERNELPATH)/arch/${KERNELARCH}/include
ifeq ($(ATH_SUPPORT_LINKDIAG_EXT), 1)
INCS += -I$(WLAN_TOP)/../hyfi-multicast -I$(WLAN_TOP)/umac/include/ -I$(WLAN_TOP)/include/sys
endif

INCS += -I$(WLAN_TOP)/umac
INCS += -I$(WLAN_TOP)/asf/include
INCS += -I$(WLAN_TOP)/../../perf_pwr_offload/drivers/host/include
INCS += -I$(WLAN_TOP)/../../perf_pwr_offload/drivers/host/os/linux/include
INCS += -I$(WLAN_TOP)/../../perf_pwr_offload/drivers/include
INCS += -I$(KERNELPATH)/drivers/net/ethernet/cs752x/src/kernel_adapt/include -I$(KERNELPATH)/drivers/net/ethernet/cs752x/src/include
INCS += -I$(KERNELPATH)/drivers/net/cs752x/src/kernel_adapt/include -I$(KERNELPATH)/drivers/net/cs752x/src/include

ifeq (1, ${CONFIG_CS75XX})
COPTS += -DCONFIG_CS75XX=1
endif

ifeq (1, ${CONFIG_CS75XX_WOT})
COPTS += -DCONFIG_CS75XX_WOT=1
endif

ifeq (1, ${CS75XX_WFO_AR9580})
INCS +=  -I$(WLAN_TOP)/wfo
INCS +=  -I$(KERNELPATH)/arch/arm/mach-goldengate/include/mach  
COPTS += -DCONFIG_CS75XX_WFO_AR9580 -DCONFIG_CS75XX_WFO_ARXXXX=1
endif

ifeq (1, ${CS75XX_WFO_AR9580_RX})
COPTS += -DCONFIG_CS75XX_WFO_AR9580_RX
endif

ifeq (1, ${CS75XX_WFO_AR9580_TX})
COPTS += -DCONFIG_CS75XX_WFO_AR9580_TX
endif

ifneq ($(ATH_SUPPORT_HTC),1)
INCS +=                            \
    -I$(WLAN_TOP)/adf/include/os   \
    -I$(WLAN_TOP)/adf/include/net  \
    -I$(WLAN_TOP)/adf/include/nbuf
INCS +=                            \
    -I$(WLAN_TOP)/adf/os/$(OS)     \
    -I$(WLAN_TOP)/adf/net/$(OS)    \
    -I$(WLAN_TOP)/adf/nbuf/$(OS)
endif

ifeq ($(CONFIG_FLOWMAC), 1)
INCS +=	-I$(FLOWMACDIR)
endif

ifeq ($(CONFIG_FLOWMAC_MODULE), 1)
INCS +=	-I$(FLOWMACDIR)
endif

ifeq ($(ATH_SUPPORT_SPECTRAL),1)
#OS_VERSION:=$(shell uname -r)
#INCS +=-I/usr/src/linux-headers-$(OS_VERSION)/include/
INCS +=-I$(WLAN_TOP)/lmac/spectral
endif

ifneq ($(BUILD_X86),y)
COPTS += -Wno-undef
else
COPTS += -Wno-undef -DBUILD_X86
endif

ifneq ($(USE_WLAN_PBO_DATA),y)
#COPTS += -Werror 
endif

ifdef ATH_CARR_DIR
COPTS+= -I$(PLATFORM)/carrier/$(ATH_CARR_DIR)/
COPTS+= -DQCA_PARTNER_PLATFORM=1
include $(PLATFORM)/carrier/${ATH_CARR_DIR}/Makefile.cust.inc
endif

ifneq ($(AP71_DEBUG),1)
ifeq ($(BUILD_OPTIMIZED),y)
ifeq ($(KERNELARCH),mips)
COPTS += -Os -funit-at-a-time -pipe -mtune=mips32r2
else
COPTS += -Os -funit-at-a-time -pipe
endif
else
COPTS += -O2 
endif
endif

ifneq ($(TARGET),ANDROID)
include $(HAL)/$(OS)/public/$(TARGET).inc
endif
include $(WLAN_TOP)/os/$(OS)/BuildCaps.inc

#
# Path to the 802.11 include files.
#
WLAN := $(WLAN_TOP)/umac/include/

# Protocol interface
IF_WLAN := $(WLAN_TOP)/umac/if_lmac/

# HTC support
ifeq ($(ATH_SUPPORT_HTC),1)
include $(obj)/$(DEPTH)/os/linux/Makefile-htc.inc
else
ifeq ($(ATH_SUPPORT_TX99),1)
INCS += -I$(TX99)
COPTS += -DATH_TX99_DIAG=1
endif
endif

# Vendor support
ifeq ($(ATH_SUPPORT_LINUX_VENDOR), 1)
include $(obj)/$(DEPTH)/os/linux/vendor/Makefile-vendor.inc
endif

ifeq ($(BUILD_WLAN_PBO_DATA),y)
GCOV_PROFILE := y
COPTS += -fprofile-arcs -ftest-coverage
endif

ifeq ($(USE_WLAN_PBO_DATA),y)
COPTS += -fprofile-use -fprofile-correction
endif

INCS += -I$(WLAN_TOP)/../../include
ifeq ($(DIRECT_ATTACH),1)
INCS += -I $(ACFGAPPDIR)/
endif

