'use strict';

var util = require('util'),
    helper = require ('../../helper'),
    _ = require ('lodash');

var Network = require('../../index').Network,
    Device = require('../../index').Device;

function PowerManager(options) {
  Network.call(this, 'powerManager', options);
}

util.inherits(PowerManager, Network);

PowerManager.prototype.getDevice = function (addr, options, cb) {
  if (typeof options === 'function') {
    cb = options;
  }
  //not implemented
  return cb && cb();
};

PowerManager.prototype.discover = function (driverOrModel, cb) {
  var self = this;
  
  helper.init(function () {
    helper.discover({force: true}, function (err, deviceInfos) {
      _.each(deviceInfos, function (deviceInfo) {
        self.emit('discovered', new Device(self, deviceInfo.id, deviceInfo.sensorInfos));
      });
      self.emit('done');
    });
  });
  return cb && cb();
};

module.exports = new PowerManager();
